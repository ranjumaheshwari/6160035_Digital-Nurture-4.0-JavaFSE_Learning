# 📣 Decorator Pattern – Notification System

**Developed as part of Digital Nurture 4.0 Java FSE**

## 🎯 Project Goal

Implement the **Decorator Design Pattern** to create a dynamic, flexible notification system that allows adding multiple delivery channels (Email, SMS, Slack) at runtime without modifying core classes.

## 📁 Structure

- `Notifier.java` – Interface with a `send()` method for sending messages  
- `EmailNotifier.java` – Base component class for sending email  
- `NotifierDecorator.java` – Abstract class that wraps a `Notifier` instance  
- `SMSNotifierDecorator.java` – Adds SMS notification capability  
- `SlackNotifierDecorator.java` – Adds Slack message capability  
- `NotificationTest.java` – Demonstrates chained decorators in action

## 💻 How to Compile & Run

In terminal, inside the project folder:

```bash
javac *.java
java NotificationTest